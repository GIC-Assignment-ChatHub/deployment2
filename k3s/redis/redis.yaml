apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: gic-chathub
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
      - name: config
        image: registry.deti/gic-chathub/redis:latest
        command: [ "sh", "-c" ]
        args:
          - |
            echo "Copying configuration file"
            cp /tmp/redis/redis.conf /etc/redis/redis.conf            
            echo "Sentinel not found to get the master info, defaulting to redis-0"
            if [ "$(hostname)" == "redis-0" ]; then
              echo "This is redis-0, No need to update config."
            else
              echo "This is not redis-0, Updating redis.conf. finding master FQDN"
              MASTER_FDQN=`hostname  -f | sed -e 's/redis-[0-9]\./redis-0./'`
              echo "REPLICAOF $MASTER_FDQN 6379" >> /etc/redis/redis.conf
            fi
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/
        - name: config
          mountPath: /tmp/redis/
      containers:
      - name: redis
        image: registry.deti/gic-chathub/redis:latest
        command: ["redis-server"]
        args: ["/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis/
        - name: config-acl
          mountPath: /conf/acl/
      volumes:
      - name: redis-config
        emptyDir: {}
      - name: config
        configMap:
          name: redis-config
      - name: config-acl
        configMap:
          name: redis-acl
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app: redis
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app: minio
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: longhorn
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Mi